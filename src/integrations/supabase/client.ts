
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wpsaktihetvpbykawvxl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Indwc2FrdGloZXR2cGJ5a2F3dnhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYyMjM5NTcsImV4cCI6MjA2MTc5OTk1N30.WNkVhcE-kMqWfZR6oGwTZ1-eqheHTIz8at4nZKS3618";

// Create the Supabase client with optimal session and authentication configuration
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      // Ensure localStorage is used for session storage
      storage: typeof window !== 'undefined' ? window.localStorage : undefined,
      // Configuration for proper JWT token handling
      autoRefreshToken: true,
      detectSessionInUrl: true
    },
    global: {
      // Add headers for improved debugging and tracking
      headers: {
        'X-Client-Info': 'topmarket-dashboard-app'
      }
    },
    // Configuration to set the correct base URLs
    db: {
      schema: 'public'
    },
    // Improved configuration to limit selected fields and avoid auth.users issues
    realtime: {
      headers: {
        'X-Client-Info': 'topmarket-dashboard-app'
      }
    }
  }
);

// Utility function to check access rights based ONLY on the JWT
export const checkUserAccess = async () => {
  try {
    const { data: { session } } = await supabase.auth.getSession();
    if (!session) {
      console.error("[ACCESS_CHECK] No hay sesión activa");
      return { accessGranted: false };
    }
    
    // IMPORTANT: Only use the email from JWT to determine permissions
    // This is now consistent with our RLS policies
    const userEmail = session.user.email?.toLowerCase() || '';
    
    // Simplified verification based ONLY on email patterns (matching RLS policies)
    const isKarla = userEmail.includes('reclutamiento') || 
                    userEmail.includes('karla.casillas');
                    
    const isAdmin = userEmail.includes('sergio.t@topmarket.com.mx');
    
    const isDavila = userEmail.includes('rys_cdmx') || 
                    userEmail.includes('davila');
    
    console.log("[ACCESS_CHECK] Verificación de acceso por JWT (RLS compatible):", { 
      email: userEmail, 
      isKarla, 
      isAdmin,
      isDavila,
      sessionValid: !!session.access_token
    });
    
    return {
      accessGranted: isKarla || isAdmin || isDavila,
      isKarla,
      isAdmin,
      isDavila,
      session
    };
  } catch (error) {
    console.error("[ACCESS_CHECK] Error verificando acceso:", error);
    return { accessGranted: false };
  }
};
