
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wpsaktihetvpbykawvxl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Indwc2FrdGloZXR2cGJ5a2F3dnhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYyMjM5NTcsImV4cCI6MjA2MTc5OTk1N30.WNkVhcE-kMqWfZR6oGwTZ1-eqheHTIz8at4nZKS3618";

// Creamos el cliente de Supabase con configuración óptima de sesión y autenticación
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      // Aseguramos que se use el localStorage para almacenar la sesión
      storage: typeof window !== 'undefined' ? window.localStorage : undefined,
      // Configuraciones para un manejo correcto de tokens JWT
      autoRefreshToken: true,
      detectSessionInUrl: true
    },
    global: {
      // Añadimos headers para mejorar el debugging y seguimiento
      headers: {
        'X-Client-Info': 'topmarket-dashboard-app'
      }
    },
    // Configuración para fijar las URLs base correctas
    db: {
      schema: 'public'
    },
    // Configuración mejorada para limitar campos seleccionados y evitar problemas con auth.users
    realtime: {
      headers: {
        'X-Client-Info': 'topmarket-dashboard-app'
      }
    }
  }
);

// Función de utilidad para verificar derechos de acceso basado ÚNICAMENTE en el JWT
export const checkUserAccess = async () => {
  try {
    const { data: { session } } = await supabase.auth.getSession();
    if (!session) {
      console.error("[ACCESS_CHECK] No hay sesión activa");
      return { accessGranted: false };
    }
    
    // IMPORTANTE: Solo utilizamos el email del JWT para determinar permisos
    // Eliminamos cualquier consulta a auth.users que podría causar errores de permisos
    const userEmail = session.user.email?.toLowerCase() || '';
    
    // Verificación simplificada basada ÚNICAMENTE en el email (que está en el JWT)
    const isKarla = userEmail.includes('reclutamiento') || 
                    userEmail.includes('karla.casillas');
                    
    const isAdmin = userEmail.includes('sergio.t@topmarket.com.mx');
    
    console.log("[ACCESS_CHECK] Verificación de acceso por JWT:", { 
      email: userEmail, 
      isKarla, 
      isAdmin,
      sessionValid: !!session.access_token
    });
    
    return {
      accessGranted: isKarla || isAdmin,
      isKarla,
      isAdmin,
      session
    };
  } catch (error) {
    console.error("[ACCESS_CHECK] Error verificando acceso:", error);
    return { accessGranted: false };
  }
};
